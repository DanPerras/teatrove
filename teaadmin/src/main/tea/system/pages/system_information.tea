<% template system_information (Map config)

/*
    Overview
    -------------------

               1.7 GB        0.4 GB         2.0 GB      
            Free Memory    Used Memory   Total Memory


    Bar Graph of Eden Survivor, Perm Gen        Graph of Heap & GC Events
    
    Class Loader                                Thread Graph

    Total Loaded:   x    Total Unloaded: x      Live: x         Daemon: x
                                                Peak: x         Total:  x
    
    graph                                       graph


    Memory
    -------------------
    
    GC Info         Memory Info
    
    
    
    Threads
    --------------------
    
    Name        Time    State
    Thread 1    30%     [____][__________][__]
    Thread 2    10%     [__________][__________]
    Thread 3
    Thread 4
    Thread 5
    Thread 6



    Thread Info
    --------------------
    
    Thread 1        30%         Running
    Name           Time           Sttas
    
    Stack Trace (Refresh)


    System Info
    --------------------
    
    
    
    
    MBeans
    --------------------
    
    MBeans          Attributes   |   Operations   |   Metadata
    
    + JMImple       Name            Value
    
                    Value           6
                    
                    
                    
                    void dumpHeap ( p0 [_____] , p1 [_____] )

*/


    admin = getTeaServletAdmin();
    
    pathPrefix = call system.util.getPathPrefix();
    
    request = getRequest();

    call system.util.handleRequest(request);

    nullFormat("None");

    classLoadingMXBean = getClassLoadingMXBean();
    compilationMXBean = getCompilationMXBean();
    garbageCollectorMXBean = getGarbageCollectorMXBeans();
    memoryManagerMXBean = getMemoryManagerMXBeans();
    memoryMXBean = getMemoryMXBean();
    memoryPoolMXBean = getMemoryPoolMXBeans();
    operatingSystemMXBean = getOperatingSystemMXBean();
    platformMBeanServer = getPlatformMBeanServer();
    runtimeMXBean = getRuntimeMXBean();
    threadMXBean = getThreadMXBean();

%>
        <article>
            <section>
                    <div id="system-info-snapshot">
                        <div class="quick-summary">
                            <table class="tablehead">
                                <tr>
                                <%
                                    // gigabytes
                                    unitLabel = "GB";
                                    unitFormat = "0.00";
                                    unitDividend = 1073741824.0;
                                    
                                    numberFormat(unitFormat);

                                    freeMemory = (memoryMXBean.heapMemoryUsage.max - memoryMXBean.heapMemoryUsage.used) / unitDividend;
                                    usedMemory = memoryMXBean.heapMemoryUsage.used / unitDividend;
                                    totalMemory = memoryMXBean.heapMemoryUsage.max / unitDividend;

                                    '<td style="width:15%">'
                                        '<div id="averageStressLevel">'
                                            '<div class="value">' freeMemory ' ' unitLabel '</div>'
                                            '<div class="label">Free Heap Memory</div>'
                                        '</div>'
                                    '</td>\n'
                                    '<td style="width:15%">'
                                        '<div id="averageTime">'
                                            '<div class="value">' usedMemory ' ' unitLabel '</div>'
                                            '<div class="label">Used Heap Memory</div>'
                                        '</div>'
                                    '</td>'
                                    '<td style="width:15%">'
                                        '<div id="averageThroughput">'
                                            '<div class="value">' totalMemory ' ' unitLabel '</div>'
                                            '<div class="label">Total Heap Memory</div>'
                                        '</div>'
                                    '</td>\n'


                                    '<td style="width:9%">&nbsp;</td>\n'


                                    freeMemory = (memoryMXBean.nonHeapMemoryUsage.max - memoryMXBean.nonHeapMemoryUsage.used) / unitDividend;
                                    usedMemory = memoryMXBean.nonHeapMemoryUsage.used / unitDividend;
                                    totalMemory = memoryMXBean.nonHeapMemoryUsage.max / unitDividend;

                                    '<td style="width:15%">'
                                        '<div id="averageStressLevel">'
                                            '<div class="value">' freeMemory ' ' unitLabel '</div>'
                                            '<div class="label">Free Non-Heap Memory</div>'
                                        '</div>'
                                    '</td>\n'
                                    '<td style="width:15%">'
                                        '<div id="averageTime">'
                                            '<div class="value">' usedMemory ' ' unitLabel '</div>'
                                            '<div class="label">Used Non-Heap Memory</div>'
                                        '</div>'
                                    '</td>'
                                    '<td style="width:15%">'
                                        '<div id="averageThroughput">'
                                            '<div class="value">' totalMemory ' ' unitLabel '</div>'
                                            '<div class="label">Total Non-Heap Memory</div>'
                                        '</div>'
                                    '</td>\n'
                                %>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <div>
                        <div id="heapUsage" style="float:left;width:30%;height:300px;"></div>
                        <div id="classUsage" style="float:left;width:30%;height:300px;"></div>
                        <div id="threadUsage" style="float:left;width:30%;height:300px;"></div>
                    </div>

                    <script type="text/javascript">
                        var MAX_POINTS = 100;
                        var INTERVAL = 2500;
                    
                        function initChart($container, formatter, callback) {
                            var options = {
                                series: {
                                    lines: { show: true, fill: false },
                                    points: { show: true }
                                },
                                grid: {
                                    hoverable: true,
                                    clickable: true,
                                    autoHighlight: false
                                },
                                legend: {
                                    show: false
                                },
                                crosshair: { mode: "x" },
                                xaxis: { show: true, mode: 'time' },
                                yaxis: { 
                                    show: true, 
                                    min: 0, 
                                    tickFormatter: formatter 
                                }
                            };
                            
                            if (callback) {
                                callback(options);
                            }

                            var data = [ ], handlers = [ ];
                            for (var i = 3; i < arguments.length; i += 2) {
                                handlers.push(arguments[i + 1]);
                                data.push({ label: arguments[i], data: [] });
                            }

                            var plot = $.plot($container, data, options);
                            $container.data('plot', plot);
                            $container.data('plotdata', data);
                            $container.data('plothandlers', handlers);
                            $container.addClass('graph');

                            var previous = null;
                            $container.bind("mouseout", function() {
                                previous = null;
                                hideTooltip();
                                plot.clearCrosshair();
                                $container.data('plothover', null);
                            });
                            
                            $container.bind("plothover", function(event, pos, item) {
                                var axes = plot.getAxes();
                                if (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max ||
                                    pos.y < axes.yaxis.min || pos.y > axes.yaxis.max) {
                                    return;
                                }
                        
                                var contents = '2:30 PM' + '<br /><br />';
                                var datapoint = null;
                                var i, j, dataset = plot.getData();
                                for (i = 0; i < dataset.length; i++) {
                                    var series = dataset[i];
                        
                                    // find the nearest points, x-wise
                                    for (j = 0; j < series.data.length; j++) {
                                        if (series.data[j][0] > pos.x) {
                                            break;
                                        }
                                    }
                                    
                                    // now interpolate
                                    var p, p1 = series.data[j - 1], 
                                           p2 = series.data[j];

                                    if (p1 == null) { p = p2[1]; }
                                    else if (p2 == null) { p = p1[1]; }
                                    else if (Math.abs(p1[0] - pos.x) < 
                                             Math.abs(p2[0] - pos.x)) {
                                        p = p1;
                                    }
                                    else { p = p2; }
                                    
                                    datapoint = p;
                                    contents += series.label + ": " + formatter(p[1]) + '<br />';
                                }
                                
                                var poffset = $container.offset();
                                var offset = plot.pointOffset({ x: datapoint[0], y: 0 });
                                
                                $container.data('plothover', [ pos, item ]);
                                showTooltip(poffset.left + offset.left, pos.pageY, contents, $container);
                                plot.lockCrosshair({ x: datapoint[0] });
                            });
                        }

                        setInterval(
                            function() {
                                $.get('<% pathPrefix %>system/remote/jmx', function(json) {
                                    $('.graph').each(function(idx) {
                                        var $this = $(this),
                                            plot = $this.data('plot'),
                                            data = $this.data('plotdata'),
                                            handlers = $this.data('plothandlers');
                                        
                                        for (var i = 0; i < handlers.length; i++) {
                                            data[i].data.push([ 
                                                json.timestamp * 1000, 
                                                handlers[i](json) 
                                            ]);
                                            
                                            if (data[i].data.length > MAX_POINTS) {
                                                // TODO: aggregate data over time period
                                                data[i].data.shift();
                                            }
                                        }
                                        
                                        plot.setData(data);
                                        plot.setupGrid();
                                        plot.draw();
                                        plot.clearCrosshair();
                                        
                                        var plothover = $this.data('plothover');
                                        if (plothover) {
                                            $this.trigger('plothover', plothover[0], plothover[1]);
                                        }
                                    });
                                });
                            },
                            3000
                        );
                        
                        function hideTooltip() {
                            $('#tooltip').fadeOut(200);
                        }
                        
                        function showTooltip (x, y, contents, container) {
                            var $tooltip = $('#tooltip');
                            if ($tooltip.length == 0) {
                                $tooltip = 
                                    $('<div id="tooltip"></div>')
                                        .css({
                                            position: 'absolute',
                                            display: 'none',
                                            border: '1px solid #fdd',
                                            padding: '5px',
                                            'background-color': '#000',
                                            color: '#FFF',
                                            opacity: 0.80,
                                            'z-index': 9999,
                                            'font-size': '12px',
                                            'border-radius': '3px'
                                        }
                                    ).appendTo("body");
                            }
                            
                            $tooltip.css({visibility: 'hidden'})
                                    .html(contents);

                            var left = x, top = y,
                                coffset = container.offset(),
                                cwidth = container.width(), 
                                cheight = container.height(),
                                twidth = $tooltip.width(),
                                theight = $tooltip.height();
                                
                            // to the right first
                            if (left + twidth + 5 < coffset.left + cwidth) {
                                left = left + 5;
                            }
                            
                            // to the left last
                            else { left = left - twidth - 5; }

                            // to above first
                            if (top - theight - 5 > coffset.top) {
                                top = top - theight - 5;
                            }
                            
                            // to bottom last
                            else { top = top + 15; }

                            $tooltip.html(contents)
                                    .css({'left': left + 'px', top: top + 'px', visibility: 'visible' })
                                    .fadeIn(200);
                        };
                        
                        $(function() {
                        
                            initChart(
                                $('#heapUsage'), 
                                function(y) {
                                    return (y / 1024 / 1024).toFixed(1) + ' MB';
                                },
                                function(options) {
                                    options.series.stack = true;
                                    options.series.lines.fill = true;
                                },
                                
                                'Heap Used (MB)', 
                                function(data) { return data.memory.heap.used; },
                                //function(data) { return data.pools.tenured.usage.used; },
                                
                                'Heap Size (MB)',
                                function(data) { return data.memory.heap.committed; }
                                //function(data) { return data.pools.tenured.usage.committed; }
                            );
                        
                            initChart(
                                $('#classUsage'), 
                                function(y) { return y; },
                                null,
                                
                                'Total Loaded Classes', 
                                function(data) {
                                    return data.classes.loaded;
                                }
                            );
                            
                            initChart(
                                $('#threadUsage'), 
                                function(y) { return y; },
                                null,
                                
                                'Live Threads', 
                                function(data) { return data.threads.count; },
                                
                                'Daemon Threads', 
                                function(data) { return data.threads.daemon; }
                            );
                        });
                    </script>
<%
/*

Instrumentation
    MemoryUsage getEdenUsage()
    MemoryUsage getSurvivorUsage()
    MemoryUsage getPermGenUsage();
    MemoryUsage getOldGenUsage();
    MemoryUsage getHeapUsage();
    MemoryUsage getNonHeapUsage();
    
    GCInfo getYoungCollector();
    GCInfo getTenuredCollector();
    
    ClassInfo getClasInfo();
    ThreadInfo getThreadInfo();

GCInfo
    long collectionTime
    long collectionCount
    CollectionInfo lastCollection
    
CollectionInfo
    long duration
    long startTime
    long endTime
    long getCollectionSize()
    long getEdenCollectionSize()
    long getSurvivorCollectionSize()
    long getOldGenCollectionSize()

*/

/*

show loading indicator for 3 secs

$.ajax('/jxm-instrumentation', function(data) {

    var edenData = $('#eden-bar-graph').data();
    edenData.push([ data.timestamp, data.edenUsage.used ])
    $('#eden-bar-graph').reload()
*/

/*
Eden Space      Survivor Space       Perm Gen           Eden
  
[       ]       [           ]       [       ]           Graph
[       ]       [           ]       [       ]
[       ]       [           ]       [       ]           Survivor
[       ]       [           ]       [       ]  
[       ]       [           ]       [       ]           Graph
[_______]       [___________]       [_______]
                                                        Old Gen
*/
%>
                <div class="table-container">
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Class Loading MX Bean</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>Loaded Class Count</td>
                                <td><% classLoadingMXBean.loadedClassCount %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Total Loaded Class Count</td>
                                <td><% classLoadingMXBean.totalLoadedClassCount %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Unloaded Class Count</td>
                                <td><% classLoadingMXBean.unloadedClassCount %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Verbose</td>
                                <td><% classLoadingMXBean.verbose %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-container">
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Compilation MX Bean</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>Compilation Time Monitoring Supported</td>
                                <td><% compilationMXBean.compilationTimeMonitoringSupported %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Name</td>
                                <td><% compilationMXBean.name %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Total Compilation Time</td>
                                <td><% compilationMXBean.totalCompilationTime %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-container">
                    <%
                        // megabytes
                        unitLabel = "MB";
                        unitFormat = "#,###,###";
                        unitDividend = 1024;
                        
                        numberFormat(unitFormat);
                    %>
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Memory MX Bean</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>Heap Memory Usage (<% unitLabel %>)</td>
                                <td><div class="table-container no-margin no-padding"><table cellspacing="1" cellpadding="3" class="tablehead">
                                            <thead>
                                                <tr class="stathead">
                                                    <th width="25%">Committed</th>
                                                    <th width="25%">Init</th>
                                                    <th width="25%">Max</th>
                                                    <th width="25%">Used</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td><% memoryMXBean.heapMemoryUsage.committed / unitDividend %></td>
                                                    <td><% memoryMXBean.heapMemoryUsage.init / unitDividend %></td>
                                                    <td><% memoryMXBean.heapMemoryUsage.max / unitDividend %></td>
                                                    <td><% memoryMXBean.heapMemoryUsage.used / unitDividend %></td>
                                                </tr>
                                            </tbody>
                                    </table></div></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Non Heap Memory Usage (<% unitLabel %>)</td>
                                <td><div class="table-container no-margin no-padding"><table cellspacing="1" cellpadding="3" class="tablehead">
                                            <thead>
                                                <tr class="stathead">
                                                    <th width="25%">Committed</th>
                                                    <th width="25%">Init</th>
                                                    <th width="25%">Max</th>
                                                    <th width="25%">Used</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td><% memoryMXBean.nonHeapMemoryUsage.committed / unitDividend %></td>
                                                    <td><% memoryMXBean.nonHeapMemoryUsage.init / unitDividend %></td>
                                                    <td><% memoryMXBean.nonHeapMemoryUsage.max / unitDividend %></td>
                                                    <td><% memoryMXBean.nonHeapMemoryUsage.used / unitDividend %></td>
                                                </tr>
                                            </tbody>
                                        </table></div></td>
                            </tr>
                            <%
                                numberFormat(null);
                            %>
                            <tr class="oddrow">
                                <td>Object Pending Finalization Count</td>
                                <td><% memoryMXBean.objectPendingFinalizationCount %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Verbose</td>
                                <td><% memoryMXBean.verbose %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-container">
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Operating System MX Bean</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>Arch</td>
                                <td><% operatingSystemMXBean.arch %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Available Processors</td>
                                <td><% operatingSystemMXBean.availableProcessors %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Name</td>
                                <td><% operatingSystemMXBean.name %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>System Load Average</td>
                                <td><% operatingSystemMXBean.systemLoadAverage %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Version</td>
                                <td><% operatingSystemMXBean.version %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-container">
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Platform MBean Server</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>Class Loader Repository</td>
                                <td><% platformMBeanServer.classLoaderRepository %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Default Domain</td>
                                <td><% platformMBeanServer.defaultDomain %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Domains</td>
                                <td><%
                                    if ( platformMBeanServer.domains != null ) {
                                        foreach ( p in 0..platformMBeanServer.domains.length-1 ) {
                                            domain = platformMBeanServer.domains[p];

                                            'Domain ' p+1 ': "' domain '"';
                                            
                                            if ( p != platformMBeanServer.domains.length-1 ) {
                                                ', '
                                            }
                                        }
                                    }
                                %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>MBean Count</td>
                                <td><% platformMBeanServer.MBeanCount %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-container">
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Runtime MX Bean</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>Boot Class Path</td>
                                <td><% replace(runtimeMXBean.bootClassPath, ':', '<br />') %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Boot Class Path Supported</td>
                                <td><% runtimeMXBean.bootClassPathSupported %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Class Path</td>
                                <td><% replace(runtimeMXBean.classPath, ':', '<br />') %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Input Arguments</td>
                                <td><%
                                    first = true;
                                    foreach ( arg in runtimeMXBean.inputArguments ) {
                                        if ( not first ) {
                                            '<br />'
                                        }
                                        arg;
                                        first = false;
                                    }
                                %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Library Path</td>
                                <td><% replace(runtimeMXBean.libraryPath, ':', '<br />') %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Management Spec Version</td>
                                <td><% runtimeMXBean.managementSpecVersion %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Name</td>
                                <td><% runtimeMXBean.name %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Spec Name</td>
                                <td><% runtimeMXBean.specName %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Spec Vendor</td>
                                <td><% runtimeMXBean.specVendor %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Spec Version</td>
                                <td><% runtimeMXBean.specVersion %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Start Time</td>
                                <td><% runtimeMXBean.startTime %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>System Properties</td>
                                <td><%
                                    first = true;
                                    foreach ( key in runtimeMXBean.systemProperties ) {
                                        if ( not first ) {
                                            '<br />'
                                        }
                                        key ': ' replace(runtimeMXBean.systemProperties[key], ##(':', ', ', "http://", '', "\n", ''));
                                        first = false;
                                    }
                                %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Uptime</td>
                                <td><% runtimeMXBean.uptime %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>VM Name</td>
                                <td><% runtimeMXBean.vmName %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>VM Vendor</td>
                                <td><% runtimeMXBean.vmVendor %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>VM Version</td>
                                <td><% runtimeMXBean.vmVersion %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-container">
                    <table cellspacing="1" cellpadding="3" class="tablehead">
                        <thead>
                            <tr class="stathead">
                                <th colspan="2">Thread MX Bean</th>
                            </tr>
                            <tr class="colhead">
                                <th width="25%">Item</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="oddrow">
                                <td>All Thread Ids</td>
                                <td><%
                                    if ( threadMXBean.allThreadIds != null ) {
                                        foreach ( t in 0..threadMXBean.allThreadIds.length-1 ) {
                                            thread = threadMXBean.allThreadIds[t];

                                            //'Thread ' t+1 ': ' thread;
                                            thread

                                            if ( t != threadMXBean.allThreadIds.length-1 ) {
                                                ', '
                                            }
                                        }
                                    }
                                %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Current Thread CPU Time</td>
                                <td><% threadMXBean.currentThreadCpuTime %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Current Thread CPU Time Supported</td>
                                <td><% threadMXBean.currentThreadCpuTimeSupported %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Current Thread User Time</td>
                                <td><% threadMXBean.currentThreadUserTime %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Daemon Thread Count</td>
                                <td><% threadMXBean.daemonThreadCount %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Object Monitor Usage Supported</td>
                                <td><% threadMXBean.objectMonitorUsageSupported %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Peak Thread Count</td>
                                <td><% threadMXBean.peakThreadCount %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Synchronizer Usage Supported</td>
                                <td><% threadMXBean.synchronizerUsageSupported %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Thread Contention Monitoring Enabled</td>
                                <td><% threadMXBean.threadContentionMonitoringEnabled %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Thread Contention Monitoring Supported</td>
                                <td><% threadMXBean.threadContentionMonitoringSupported %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Thread Count</td>
                                <td><% threadMXBean.threadCount %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Thread CPU Time Enabled</td>
                                <td><% threadMXBean.threadCpuTimeEnabled %></td>
                            </tr>
                            <tr class="oddrow">
                                <td>Thread CPU Time Supported</td>
                                <td><% threadMXBean.threadCpuTimeSupported %></td>
                            </tr>
                            <tr class="evenrow">
                                <td>Total Started Thread Count</td>
                                <td><% threadMXBean.totalStartedThreadCount %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>
        </article>
